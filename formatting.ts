import client from "./client.ts";
import { Events, ChannelType, PartialGroupDMChannel, DiscordAPIError, MessageFlags } from "discord.js";

const boldSansCharMap = {
    "0": "\u{1d7ec}",
    "1": "\u{1d7ed}",
    "2": "\u{1d7ee}",
    "3": "\u{1d7ef}",
    "4": "\u{1d7f0}",
    "5": "\u{1d7f1}",
    "6": "\u{1d7f2}",
    "7": "\u{1d7f3}",
    "8": "\u{1d7f4}",
    "9": "\u{1d7f5}",
    "a": "\u{1d5ee}",
    "b": "\u{1d5ef}",
    "c": "\u{1d5f0}",
    "d": "\u{1d5f1}",
    "e": "\u{1d5f2}",
    "f": "\u{1d5f3}",
    "g": "\u{1d5f4}",
    "h": "\u{1d5f5}",
    "i": "\u{1d5f6}",
    "j": "\u{1d5f7}",
    "k": "\u{1d5f8}",
    "l": "\u{1d5f9}",
    "m": "\u{1d5fa}",
    "n": "\u{1d5fb}",
    "o": "\u{1d5fc}",
    "p": "\u{1d5fd}",
    "q": "\u{1d5fe}",
    "r": "\u{1d5ff}",
    "s": "\u{1d600}",
    "t": "\u{1d601}",
    "u": "\u{1d602}",
    "v": "\u{1d603}",
    "w": "\u{1d604}",
    "x": "\u{1d605}",
    "y": "\u{1d606}",
    "z": "\u{1d607}",
    "A": "\u{1d5d4}",
    "B": "\u{1d5d5}",
    "C": "\u{1d5d6}",
    "D": "\u{1d5d7}",
    "E": "\u{1d5d8}",
    "F": "\u{1d5d9}",
    "G": "\u{1d5da}",
    "H": "\u{1d5db}",
    "I": "\u{1d5dc}",
    "J": "\u{1d5dd}",
    "K": "\u{1d5de}",
    "L": "\u{1d5df}",
    "M": "\u{1d5e0}",
    "N": "\u{1d5e1}",
    "O": "\u{1d5e2}",
    "P": "\u{1d5e3}",
    "Q": "\u{1d5e4}",
    "R": "\u{1d5e5}",
    "S": "\u{1d5e6}",
    "T": "\u{1d5e7}",
    "U": "\u{1d5e8}",
    "V": "\u{1d5e9}",
    "W": "\u{1d5ea}",
    "X": "\u{1d5eb}",
    "Y": "\u{1d5ec}",
    "Z": "\u{1d5ed}"
};

const boldSerifCharMap = {
	"0": "\u{1d7ce}",
	"1": "\u{1d7cf}",
	"2": "\u{1d7d0}",
	"3": "\u{1d7d1}",
	"4": "\u{1d7d2}",
	"5": "\u{1d7d3}",
	"6": "\u{1d7d4}",
	"7": "\u{1d7d5}",
	"8": "\u{1d7d6}",
	"9": "\u{1d7d7}",
	"a": "\u{1d41a}",
	"b": "\u{1d41b}",
	"c": "\u{1d41c}",
	"d": "\u{1d41d}",
	"e": "\u{1d41e}",
	"f": "\u{1d41f}",
	"g": "\u{1d420}",
	"h": "\u{1d421}",
	"i": "\u{1d422}",
	"j": "\u{1d423}",
	"k": "\u{1d424}",
	"l": "\u{1d425}",
	"m": "\u{1d426}",
	"n": "\u{1d427}",
	"o": "\u{1d428}",
	"p": "\u{1d429}",
	"q": "\u{1d42a}",
	"r": "\u{1d42b}",
	"s": "\u{1d42c}",
	"t": "\u{1d42d}",
	"u": "\u{1d42e}",
	"v": "\u{1d42f}",
	"w": "\u{1d430}",
	"x": "\u{1d431}",
	"y": "\u{1d432}",
	"z": "\u{1d433}",
	"A": "\u{1d400}",
	"B": "\u{1d401}",
	"C": "\u{1d402}",
	"D": "\u{1d403}",
	"E": "\u{1d404}",
	"F": "\u{1d405}",
	"G": "\u{1d406}",
	"H": "\u{1d407}",
	"I": "\u{1d408}",
	"J": "\u{1d409}",
	"K": "\u{1d40a}",
	"L": "\u{1d40b}",
	"M": "\u{1d40c}",
	"N": "\u{1d40d}",
	"O": "\u{1d40e}",
	"P": "\u{1d40f}",
	"Q": "\u{1d410}",
	"R": "\u{1d411}",
	"S": "\u{1d412}",
	"T": "\u{1d413}",
	"U": "\u{1d414}",
	"V": "\u{1d415}",
	"W": "\u{1d416}",
	"X": "\u{1d417}",
	"Y": "\u{1d418}",
	"Z": "\u{1d419}"
};

const italicSansCharMap = {
	"a": "\u{1d622}",
	"b": "\u{1d623}",
	"c": "\u{1d624}",
	"d": "\u{1d625}",
	"e": "\u{1d626}",
	"f": "\u{1d627}",
	"g": "\u{1d628}",
	"h": "\u{1d629}",
	"i": "\u{1d62a}",
	"j": "\u{1d62b}",
	"k": "\u{1d62c}",
	"l": "\u{1d62d}",
	"m": "\u{1d62e}",
	"n": "\u{1d62f}",
	"o": "\u{1d630}",
	"p": "\u{1d631}",
	"q": "\u{1d632}",
	"r": "\u{1d633}",
	"s": "\u{1d634}",
	"t": "\u{1d635}",
	"u": "\u{1d636}",
	"v": "\u{1d637}",
	"w": "\u{1d638}",
	"x": "\u{1d639}",
	"y": "\u{1d63a}",
	"z": "\u{1d63b}",
	"A": "\u{1d608}",
	"B": "\u{1d609}",
	"C": "\u{1d60a}",
	"D": "\u{1d60b}",
	"E": "\u{1d60c}",
	"F": "\u{1d60d}",
	"G": "\u{1d60e}",
	"H": "\u{1d60f}",
	"I": "\u{1d610}",
	"J": "\u{1d611}",
	"K": "\u{1d612}",
	"L": "\u{1d613}",
	"M": "\u{1d614}",
	"N": "\u{1d615}",
	"O": "\u{1d616}",
	"P": "\u{1d617}",
	"Q": "\u{1d618}",
	"R": "\u{1d619}",
	"S": "\u{1d61a}",
	"T": "\u{1d61b}",
	"U": "\u{1d61c}",
	"V": "\u{1d61d}",
	"W": "\u{1d61e}",
	"X": "\u{1d61f}",
	"Y": "\u{1d620}",
	"Z": "\u{1d621}"
}

const italicSerifCharMap = {
	"a": "\u{1d44e}",
	"b": "\u{1d44f}",
	"c": "\u{1d450}",
	"d": "\u{1d451}",
	"e": "\u{1d452}",
	"f": "\u{1d453}",
	"g": "\u{1d454}",
	"h": "\u{210e}",
	"i": "\u{1d456}",
	"j": "\u{1d457}",
	"k": "\u{1d458}",
	"l": "\u{1d459}",
	"m": "\u{1d45a}",
	"n": "\u{1d45b}",
	"o": "\u{1d45c}",
	"p": "\u{1d45d}",
	"q": "\u{1d45e}",
	"r": "\u{1d45f}",
	"s": "\u{1d460}",
	"t": "\u{1d461}",
	"u": "\u{1d462}",
	"v": "\u{1d463}",
	"w": "\u{1d464}",
	"x": "\u{1d465}",
	"y": "\u{1d466}",
	"z": "\u{1d467}",
	"A": "\u{1d434}",
	"B": "\u{1d435}",
	"C": "\u{1d436}",
	"D": "\u{1d437}",
	"E": "\u{1d438}",
	"F": "\u{1d439}",
	"G": "\u{1d43a}",
	"H": "\u{1d43b}",
	"I": "\u{1d43c}",
	"J": "\u{1d43d}",
	"K": "\u{1d43e}",
	"L": "\u{1d43f}",
	"M": "\u{1d440}",
	"N": "\u{1d441}",
	"O": "\u{1d442}",
	"P": "\u{1d443}",
	"Q": "\u{1d444}",
	"R": "\u{1d445}",
	"S": "\u{1d446}",
	"T": "\u{1d447}",
	"U": "\u{1d448}",
	"V": "\u{1d449}",
	"W": "\u{1d44a}",
	"X": "\u{1d44b}",
	"Y": "\u{1d44c}",
	"Z": "\u{1d44d}"
};

const boldItalicSansCharMap = {
	"a": "\u{1d656}",
	"b": "\u{1d657}",
	"c": "\u{1d658}",
	"d": "\u{1d659}",
	"e": "\u{1d65a}",
	"f": "\u{1d65b}",
	"g": "\u{1d65c}",
	"h": "\u{1d65d}",
	"i": "\u{1d65e}",
	"j": "\u{1d65f}",
	"k": "\u{1d660}",
	"l": "\u{1d661}",
	"m": "\u{1d662}",
	"n": "\u{1d663}",
	"o": "\u{1d664}",
	"p": "\u{1d665}",
	"q": "\u{1d666}",
	"r": "\u{1d667}",
	"s": "\u{1d668}",
	"t": "\u{1d669}",
	"u": "\u{1d66a}",
	"v": "\u{1d66b}",
	"w": "\u{1d66c}",
	"x": "\u{1d66d}",
	"y": "\u{1d66e}",
	"z": "\u{1d66f}",
	"A": "\u{1d63c}",
	"B": "\u{1d63d}",
	"C": "\u{1d63e}",
	"D": "\u{1d63f}",
	"E": "\u{1d640}",
	"F": "\u{1d641}",
	"G": "\u{1d642}",
	"H": "\u{1d643}",
	"I": "\u{1d644}",
	"J": "\u{1d645}",
	"K": "\u{1d646}",
	"L": "\u{1d647}",
	"M": "\u{1d648}",
	"N": "\u{1d649}",
	"O": "\u{1d64a}",
	"P": "\u{1d64b}",
	"Q": "\u{1d64c}",
	"R": "\u{1d64d}",
	"S": "\u{1d64e}",
	"T": "\u{1d64f}",
	"U": "\u{1d650}",
	"V": "\u{1d651}",
	"W": "\u{1d652}",
	"X": "\u{1d653}",
	"Y": "\u{1d654}",
	"Z": "\u{1d655}"
}

const boldItalicSerifCharMap = {
	"a": "\u{1d482}",
	"b": "\u{1d483}",
	"c": "\u{1d484}",
	"d": "\u{1d485}",
	"e": "\u{1d486}",
	"f": "\u{1d487}",
	"g": "\u{1d488}",
	"h": "\u{1d489}",
	"i": "\u{1d48a}",
	"j": "\u{1d48b}",
	"k": "\u{1d48c}",
	"l": "\u{1d48d}",
	"m": "\u{1d48e}",
	"n": "\u{1d48f}",
	"o": "\u{1d490}",
	"p": "\u{1d491}",
	"q": "\u{1d492}",
	"r": "\u{1d493}",
	"s": "\u{1d494}",
	"t": "\u{1d495}",
	"u": "\u{1d496}",
	"v": "\u{1d497}",
	"w": "\u{1d498}",
	"x": "\u{1d499}",
	"y": "\u{1d49a}",
	"z": "\u{1d49b}",
	"A": "\u{1d468}",
	"B": "\u{1d469}",
	"C": "\u{1d46a}",
	"D": "\u{1d46b}",
	"E": "\u{1d46c}",
	"F": "\u{1d46d}",
	"G": "\u{1d46e}",
	"H": "\u{1d46f}",
	"I": "\u{1d470}",
	"J": "\u{1d471}",
	"K": "\u{1d472}",
	"L": "\u{1d473}",
	"M": "\u{1d474}",
	"N": "\u{1d475}",
	"O": "\u{1d476}",
	"P": "\u{1d477}",
	"Q": "\u{1d478}",
	"R": "\u{1d479}",
	"S": "\u{1d47a}",
	"T": "\u{1d47b}",
	"U": "\u{1d47c}",
	"V": "\u{1d47d}",
	"W": "\u{1d47e}",
	"X": "\u{1d47f}",
	"Y": "\u{1d480}",
	"Z": "\u{1d481}"
};

const cursiveCharMap = {
	"a": "\u{1d4b6}",
	"b": "\u{1d4b7}",
	"c": "\u{1d4b8}",
	"d": "\u{1d4b9}",
	"e": "\u{1d452}",
	"f": "\u{1d4bb}",
	"g": "\u{1d454}",
	"h": "\u{1d4bd}",
	"i": "\u{1d4be}",
	"j": "\u{1d4bf}",
	"k": "\u{1d4c0}",
	"l": "\u{1d4c1}",
	"m": "\u{1d4c2}",
	"n": "\u{1d4c3}",
	"o": "\u{1d45c}",
	"p": "\u{1d4c5}",
	"q": "\u{1d4c6}",
	"r": "\u{1d4c7}",
	"s": "\u{1d4c8}",
	"t": "\u{1d4c9}",
	"u": "\u{1d4ca}",
	"v": "\u{1d4cb}",
	"w": "\u{1d4cc}",
	"x": "\u{1d4cd}",
	"y": "\u{1d4ce}",
	"z": "\u{1d4cf}",
	"A": "\u{1d49c}",
	"B": "\u{1d435}",
	"C": "\u{1d49e}",
	"D": "\u{1d49f}",
	"E": "\u{1d438}",
	"F": "\u{1d439}",
	"G": "\u{1d4a2}",
	"H": "\u{1d43b}",
	"I": "\u{1d43c}",
	"J": "\u{1d4a5}",
	"K": "\u{1d4a6}",
	"L": "\u{1d43f}",
	"M": "\u{1d440}",
	"N": "\u{1d4a9}",
	"O": "\u{1d4aa}",
	"P": "\u{1d4ab}",
	"Q": "\u{1d4ac}",
	"R": "\u{1d445}",
	"S": "\u{1d4ae}",
	"T": "\u{1d4af}",
	"U": "\u{1d4b0}",
	"V": "\u{1d4b1}",
	"W": "\u{1d4b2}",
	"X": "\u{1d4b3}",
	"Y": "\u{1d4b4}",
	"Z": "\u{1d4b5}"
};

const cursiveBoldCharMap = {
	"a": "\u{1d4ea}",
	"b": "\u{1d4eb}",
	"c": "\u{1d4ec}",
	"d": "\u{1d4ed}",
	"e": "\u{1d4ee}",
	"f": "\u{1d4ef}",
	"g": "\u{1d4f0}",
	"h": "\u{1d4f1}",
	"i": "\u{1d4f2}",
	"j": "\u{1d4f3}",
	"k": "\u{1d4f4}",
	"l": "\u{1d4f5}",
	"m": "\u{1d4f6}",
	"n": "\u{1d4f7}",
	"o": "\u{1d4f8}",
	"p": "\u{1d4f9}",
	"q": "\u{1d4fa}",
	"r": "\u{1d4fb}",
	"s": "\u{1d4fc}",
	"t": "\u{1d4fd}",
	"u": "\u{1d4fe}",
	"v": "\u{1d4ff}",
	"w": "\u{1d500}",
	"x": "\u{1d501}",
	"y": "\u{1d502}",
	"z": "\u{1d503}",
	"A": "\u{1d4d0}",
	"B": "\u{1d4d1}",
	"C": "\u{1d4d2}",
	"D": "\u{1d4d3}",
	"E": "\u{1d4d4}",
	"F": "\u{1d4d5}",
	"G": "\u{1d4d6}",
	"H": "\u{1d4d7}",
	"I": "\u{1d4d8}",
	"J": "\u{1d4d9}",
	"K": "\u{1d4da}",
	"L": "\u{1d4db}",
	"M": "\u{1d4dc}",
	"N": "\u{1d4dd}",
	"O": "\u{1d4de}",
	"P": "\u{1d4df}",
	"Q": "\u{1d4e0}",
	"R": "\u{1d4e1}",
	"S": "\u{1d4e2}",
	"T": "\u{1d4e3}",
	"U": "\u{1d4e4}",
	"V": "\u{1d4e5}",
	"W": "\u{1d4e6}",
	"X": "\u{1d4e7}",
	"Y": "\u{1d4e8}",
	"Z": "\u{1d4e9}"
}

const medievalCharMap = {
	"a": "\u{1d51e}",
	"b": "\u{1d51f}",
	"c": "\u{1d520}",
	"d": "\u{1d521}",
	"e": "\u{1d522}",
	"f": "\u{1d523}",
	"g": "\u{1d524}",
	"h": "\u{1d525}",
	"i": "\u{1d526}",
	"j": "\u{1d527}",
	"k": "\u{1d528}",
	"l": "\u{1d529}",
	"m": "\u{1d52a}",
	"n": "\u{1d52b}",
	"o": "\u{1d52c}",
	"p": "\u{1d52d}",
	"q": "\u{1d52e}",
	"r": "\u{1d52f}",
	"s": "\u{1d530}",
	"t": "\u{1d531}",
	"u": "\u{1d532}",
	"v": "\u{1d533}",
	"w": "\u{1d534}",
	"x": "\u{1d535}",
	"y": "\u{1d536}",
	"z": "\u{1d537}",
	"A": "\u{1d504}",
	"B": "\u{1d505}",
	"C": "\u{212d}",
	"D": "\u{1d507}",
	"E": "\u{1d508}",
	"F": "\u{1d509}",
	"G": "\u{1d50a}",
	"H": "\u{210c}",
	"I": "\u{2111}",
	"J": "\u{1d50d}",
	"K": "\u{1d50e}",
	"L": "\u{1d50f}",
	"M": "\u{1d510}",
	"N": "\u{1d511}",
	"O": "\u{1d512}",
	"P": "\u{1d513}",
	"Q": "\u{1d514}",
	"R": "\u{211c}",
	"S": "\u{1d516}",
	"T": "\u{1d517}",
	"U": "\u{1d518}",
	"V": "\u{1d519}",
	"W": "\u{1d51a}",
	"X": "\u{1d51b}",
	"Y": "\u{1d51c}",
	"Z": "\u{2128}"
};

const medievalBoldCharMap = {
	"a": "\u{1d586}",
	"b": "\u{1d587}",
	"c": "\u{1d588}",
	"d": "\u{1d589}",
	"e": "\u{1d58a}",
	"f": "\u{1d58b}",
	"g": "\u{1d58c}",
	"h": "\u{1d58d}",
	"i": "\u{1d58e}",
	"j": "\u{1d58f}",
	"k": "\u{1d590}",
	"l": "\u{1d591}",
	"m": "\u{1d592}",
	"n": "\u{1d593}",
	"o": "\u{1d594}",
	"p": "\u{1d595}",
	"q": "\u{1d596}",
	"r": "\u{1d597}",
	"s": "\u{1d598}",
	"t": "\u{1d599}",
	"u": "\u{1d59a}",
	"v": "\u{1d59b}",
	"w": "\u{1d59c}",
	"x": "\u{1d59d}",
	"y": "\u{1d59e}",
	"z": "\u{1d59f}",
	"A": "\u{1d56c}",
	"B": "\u{1d56d}",
	"C": "\u{1d56e}",
	"D": "\u{1d56f}",
	"E": "\u{1d570}",
	"F": "\u{1d571}",
	"G": "\u{1d572}",
	"H": "\u{1d573}",
	"I": "\u{1d574}",
	"J": "\u{1d575}",
	"K": "\u{1d576}",
	"L": "\u{1d577}",
	"M": "\u{1d578}",
	"N": "\u{1d579}",
	"O": "\u{1d57a}",
	"P": "\u{1d57b}",
	"Q": "\u{1d57c}",
	"R": "\u{1d57d}",
	"S": "\u{1d57e}",
	"T": "\u{1d57f}",
	"U": "\u{1d580}",
	"V": "\u{1d581}",
	"W": "\u{1d582}",
	"X": "\u{1d583}",
	"Y": "\u{1d584}",
	"Z": "\u{1d585}"
};

const doubleStruckCharMap = {
	"0": "\u{1d7d8}",
	"1": "\u{1d7d9}",
	"2": "\u{1d7da}",
	"3": "\u{1d7db}",
	"4": "\u{1d7dc}",
	"5": "\u{1d7dd}",
	"6": "\u{1d7de}",
	"7": "\u{1d7df}",
	"8": "\u{1d7e0}",
	"9": "\u{1d7e1}",
	"a": "\u{1d552}",
	"b": "\u{1d553}",
	"c": "\u{1d554}",
	"d": "\u{1d555}",
	"e": "\u{1d556}",
	"f": "\u{1d557}",
	"g": "\u{1d558}",
	"h": "\u{1d559}",
	"i": "\u{1d55a}",
	"j": "\u{1d55b}",
	"k": "\u{1d55c}",
	"l": "\u{1d55d}",
	"m": "\u{1d55e}",
	"n": "\u{1d55f}",
	"o": "\u{1d560}",
	"p": "\u{1d561}",
	"q": "\u{1d562}",
	"r": "\u{1d563}",
	"s": "\u{1d564}",
	"t": "\u{1d565}",
	"u": "\u{1d566}",
	"v": "\u{1d567}",
	"w": "\u{1d568}",
	"x": "\u{1d569}",
	"y": "\u{1d56a}",
	"z": "\u{1d56b}",
	"A": "\u{1d538}",
	"B": "\u{1d539}",
	"C": "\u{2102}",
	"D": "\u{1d53b}",
	"E": "\u{1d53c}",
	"F": "\u{1d53d}",
	"G": "\u{1d53e}",
	"H": "\u{210d}",
	"I": "\u{1d540}",
	"J": "\u{1d541}",
	"K": "\u{1d542}",
	"L": "\u{1d543}",
	"M": "\u{1d544}",
	"N": "\u{2115}",
	"O": "\u{1d546}",
	"P": "\u{2119}",
	"Q": "\u{211a}",
	"R": "\u{211d}",
	"S": "\u{1d54a}",
	"T": "\u{1d54b}",
	"U": "\u{1d54c}",
	"V": "\u{1d54d}",
	"W": "\u{1d54e}",
	"X": "\u{1d54f}",
	"Y": "\u{1d550}",
	"Z": "\u{2124}"
};

const typewriterCharMap = {
	"0": "\u{1d7f6}",
	"1": "\u{1d7f7}",
	"2": "\u{1d7f8}",
	"3": "\u{1d7f9}",
	"4": "\u{1d7fa}",
	"5": "\u{1d7fb}",
	"6": "\u{1d7fc}",
	"7": "\u{1d7fd}",
	"8": "\u{1d7fe}",
	"9": "\u{1d7ff}",
	"a": "\u{1d68a}",
	"b": "\u{1d68b}",
	"c": "\u{1d68c}",
	"d": "\u{1d68d}",
	"e": "\u{1d68e}",
	"f": "\u{1d68f}",
	"g": "\u{1d690}",
	"h": "\u{1d691}",
	"i": "\u{1d692}",
	"j": "\u{1d693}",
	"k": "\u{1d694}",
	"l": "\u{1d695}",
	"m": "\u{1d696}",
	"n": "\u{1d697}",
	"o": "\u{1d698}",
	"p": "\u{1d699}",
	"q": "\u{1d69a}",
	"r": "\u{1d69b}",
	"s": "\u{1d69c}",
	"t": "\u{1d69d}",
	"u": "\u{1d69e}",
	"v": "\u{1d69f}",
	"w": "\u{1d6a0}",
	"x": "\u{1d6a1}",
	"y": "\u{1d6a2}",
	"z": "\u{1d6a3}",
	"A": "\u{1d670}",
	"B": "\u{1d671}",
	"C": "\u{1d672}",
	"D": "\u{1d673}",
	"E": "\u{1d674}",
	"F": "\u{1d675}",
	"G": "\u{1d676}",
	"H": "\u{1d677}",
	"I": "\u{1d678}",
	"J": "\u{1d679}",
	"K": "\u{1d67a}",
	"L": "\u{1d67b}",
	"M": "\u{1d67c}",
	"N": "\u{1d67d}",
	"O": "\u{1d67e}",
	"P": "\u{1d67f}",
	"Q": "\u{1d680}",
	"R": "\u{1d681}",
	"S": "\u{1d682}",
	"T": "\u{1d683}",
	"U": "\u{1d684}",
	"V": "\u{1d685}",
	"W": "\u{1d686}",
	"X": "\u{1d687}",
	"Y": "\u{1d688}",
	"Z": "\u{1d689}"
}

const frakturCharMap = {
	"a": "\u{1d51e}",
	"b": "\u{1d51f}",
	"c": "\u{1d520}",
	"d": "\u{1d521}",
	"e": "\u{1d522}",
	"f": "\u{1d523}",
	"g": "\u{1d524}",
	"h": "\u{1d525}",
	"i": "\u{1d526}",
	"j": "\u{1d527}",
	"k": "\u{1d528}",
	"l": "\u{1d529}",
	"m": "\u{1d52a}",
	"n": "\u{1d52b}",
	"o": "\u{1d52c}",
	"p": "\u{1d52d}",
	"q": "\u{1d52e}",
	"r": "\u{1d52f}",
	"s": "\u{1d530}",
	"t": "\u{1d531}",
	"u": "\u{1d532}",
	"v": "\u{1d533}",
	"w": "\u{1d534}",
	"x": "\u{1d535}",
	"y": "\u{1d536}",
	"z": "\u{1d537}",
	"A": "\u{1d504}",
	"B": "\u{1d505}",
	"C": "\u{212d}",
	"D": "\u{1d507}",
	"E": "\u{1d508}",
	"F": "\u{1d509}",
	"G": "\u{1d50a}",
	"H": "\u{210c}",
	"I": "\u{2111}",
	"J": "\u{1d50d}",
	"K": "\u{1d50e}",
	"L": "\u{1d50f}",
	"M": "\u{1d510}",
	"N": "\u{1d511}",
	"O": "\u{1d512}",
	"P": "\u{1d513}",
	"Q": "\u{1d514}",
	"R": "\u{211c}",
	"S": "\u{1d516}",
	"T": "\u{1d517}",
	"U": "\u{1d518}",
	"V": "\u{1d519}",
	"W": "\u{1d51a}",
	"X": "\u{1d51b}",
	"Y": "\u{1d51c}",
	"Z": "\u{2128}"
};

const frakturBoldCharMap = {
	"a": "\u{1d586}",
	"b": "\u{1d587}",
	"c": "\u{1d588}",
	"d": "\u{1d589}",
	"e": "\u{1d58a}",
	"f": "\u{1d58b}",
	"g": "\u{1d58c}",
	"h": "\u{1d58d}",
	"i": "\u{1d58e}",
	"j": "\u{1d58f}",
	"k": "\u{1d590}",
	"l": "\u{1d591}",
	"m": "\u{1d592}",
	"n": "\u{1d593}",
	"o": "\u{1d594}",
	"p": "\u{1d595}",
	"q": "\u{1d596}",
	"r": "\u{1d597}",
	"s": "\u{1d598}",
	"t": "\u{1d599}",
	"u": "\u{1d59a}",
	"v": "\u{1d59b}",
	"w": "\u{1d59c}",
	"x": "\u{1d59d}",
	"y": "\u{1d59e}",
	"z": "\u{1d59f}",
	"A": "\u{1d56c}",
	"B": "\u{1d56d}",
	"C": "\u{1d56e}",
	"D": "\u{1d56f}",
	"E": "\u{1d570}",
	"F": "\u{1d571}",
	"G": "\u{1d572}",
	"H": "\u{1d573}",
	"I": "\u{1d574}",
	"J": "\u{1d575}",
	"K": "\u{1d576}",
	"L": "\u{1d577}",
	"M": "\u{1d578}",
	"N": "\u{1d579}",
	"O": "\u{1d57a}",
	"P": "\u{1d57b}",
	"Q": "\u{1d57c}",
	"R": "\u{1d57d}",
	"S": "\u{1d57e}",
	"T": "\u{1d57f}",
	"U": "\u{1d580}",
	"V": "\u{1d581}",
	"W": "\u{1d582}",
	"X": "\u{1d583}",
	"Y": "\u{1d584}",
	"Z": "\u{1d585}"
};

const charMaps = [
    boldSansCharMap,
    boldSerifCharMap,
    italicSansCharMap,
    italicSerifCharMap,
    boldItalicSansCharMap,
    boldItalicSerifCharMap,
    cursiveCharMap,
    cursiveBoldCharMap,
    medievalCharMap,
    medievalBoldCharMap,
    doubleStruckCharMap,
    typewriterCharMap,
    frakturCharMap,
    frakturBoldCharMap
];

const applyCharMap = (charMap: Record<string, string>, text: string) => [...text].map(char => char in charMap ? charMap[char] : char).join("");

export const styleText = (text: string, style: string, autoCapitalize: boolean, preclean: boolean) => {
    let unstyled = text;
    if (preclean) {
        for (const charMap of charMaps) {
            let modified = "";
            for (const char of unstyled) {
                const entry = Object.entries(charMap).find(([key, value]) => value === char);
                if (!entry) {
                    modified += char;
                    continue
                };
                modified += entry[0];
            }
            unstyled = modified;
        };
    };
    if (autoCapitalize) {
        let modified = "";
        for (const [index, char] of [...unstyled].entries()) {
            if (index === 0 || [...unstyled][index - 1] === "-") {
                modified += char.toUpperCase();
            } else {
                modified += char;
            };
        };
        unstyled = modified;
    }
    let result = "";
    switch (style) {
        case "bold-sans-serif":
            result = applyCharMap(boldSansCharMap, unstyled);
            break;
        case "bold-serif":
            result = applyCharMap(boldSerifCharMap, unstyled);
            break;
        case "italic-sans-serif":
            result = applyCharMap(italicSansCharMap, unstyled);
            break;
        case "italic-serif":
            result = applyCharMap(italicSerifCharMap, unstyled);
            break;
        case "bold-italic-sans-serif":
            result = applyCharMap(boldItalicSansCharMap, unstyled);
            break;
        case "bold-italic-serif":
            result = applyCharMap(boldItalicSerifCharMap, unstyled);
            break;
        case "cursive":
            result = applyCharMap(cursiveCharMap, unstyled);
            break;
        case "cursive-bold":
            result = applyCharMap(cursiveBoldCharMap, unstyled);
            break;
        case "medieval":
            result = applyCharMap(medievalCharMap, unstyled);
            break;
        case "medieval-bold":
            result = applyCharMap(medievalBoldCharMap, unstyled);
            break;
        case "doublestruck":
            result = applyCharMap(doubleStruckCharMap, unstyled);
            break;
        case "typewriter":
            result = applyCharMap(typewriterCharMap, unstyled);
            break;
        case "fraktur":
            result = applyCharMap(frakturCharMap, unstyled);
            break;
        case "fraktur-bold":
            result = applyCharMap(frakturBoldCharMap, unstyled);
            break;
    }
    return result;
}

client.on(Events.InteractionCreate, async interaction => {
	if (!interaction.isChatInputCommand()) return;
    if (interaction.commandName !== "style_channel_name") return;
    if (!interaction.channel) return await interaction.reply("You can only run this in text based channels!");
    //if (interaction.channel instanceof PartialGroupDMChannel) return await interaction.reply("This channel can't have a name!");
    if (interaction.channel.type === ChannelType.DM || interaction.channel instanceof PartialGroupDMChannel) return await interaction.reply("This is DM channel, and this command will not work here.")
    if (!interaction.channel.name) return await interaction.reply("This channel doesn't have a name!");
    let result = styleText(interaction.channel.name, interaction.options.getString("style")!, interaction.options.getBoolean("autocapitalize")!, interaction.options.getBoolean("preclean") ?? true)
    if (interaction.channel.name === result) return await interaction.reply("Could not apply style; is the channel name already styled?");
    if (interaction.options.getBoolean("prefix") && interaction.channel.parent?.type === ChannelType.GuildCategory && "position" in interaction.channel) {
        const siblings = [...interaction.channel.parent.children.cache.keys()];
        if (interaction.channel.position === siblings.length - 1) {
            result = "\u255A" + result;
        } else if (interaction.channel.position === 0) {
            result = "\u2554" + result;
        } else {
            result = "\u2560" + result;
        }
    }
    await interaction.deferReply({
        flags: MessageFlags.Ephemeral
    });
    try {
        await interaction.channel.edit({name: result});
    } catch (e) {
        console.error(e);
        if (e instanceof DiscordAPIError) {
            return await interaction.followUp({
                content: "Error code " + e.code + ": " + e.message
            })
        } else {
            return await interaction.followUp({
                content: "An unknown error occured."
            })
        }
    }
    await interaction.followUp("Successfully edited!")
})

client.on(Events.InteractionCreate, async interaction => {
	if (!interaction.isChatInputCommand()) return;
    if (interaction.commandName !== "style_text") return;
    return await interaction.reply({
        content: styleText(interaction.options.getString("text")!, interaction.options.getString("style")!, false, interaction.options.getBoolean("preclean") ?? true),
        allowedMentions: {
            parse: [],
            roles: [],
            users: []
        }
    });
})
